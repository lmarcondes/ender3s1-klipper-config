[gcode_macro _km_options]
# These are examples of some likely customizations:
# Any sheets in the below list will be available with a configurable offset.
#variable_bed_surfaces: ['smooth_1','texture_1']
# Length (in mm) of filament to load (bowden tubes will be longer).
#variable_load_length: 90.0
# Hide the Octoprint LCD menu since I don't use it.
#variable_menu_show_octoprint: False
# Customize the filament menus (up to 10 entries).
#variable_menu_temperature: [
#  {'name' : 'PLA',  'extruder' : 200.0, 'bed' : 60.0},
#  {'name' : 'PETG', 'extruder' : 230.0, 'bed' : 85.0},
#  {'name' : 'ABS',  'extruder' : 245.0, 'bed' : 110.0, 'chamber' : 60}]
# Length of filament (in millimeters) to purge at print start.
#variable_start_purge_length: 30 # This value works for most setups.
gcode: # This line is required by Klipper.
# Any code you put here will run at klipper startup, after the initialization
# for these macros. For example, you could uncomment the following line to
# automatically adjust your bed surface offsets to account for any changes made
# to your Z endstop or probe offset.
#  ADJUST_SURFACE_OFFSETS

# This line includes all the standard macros.
[include klipper-macros/*.cfg]
[include klipper-macros/optional/bed_mesh.cfg]
# Uncomment to include features that require specific hardware support.
# LCD menu support for features like bed surface selection and pause next layer.
#[include klipper-macros/optional/lcd_menus.cfg]
# Optimized bed leveling
#[include klipper-macros/optional/bed_mesh.cfg]

# The sections below here are required for the macros to work. If your config
# already has some of these sections you should merge the duplicates into one
# (or if they are identical just remove one of them).
[idle_timeout]
gcode:
  _KM_IDLE_TIMEOUT # This line must be in your idle_timeout section.

[respond]

[pause_resume]

[save_variables]
filename: ~/e3s1_data/config/variables.cfg # UPDATE THIS FOR YOUR PATH!!!

[gcode_macro START_PRINT]
gcode:
    SET_PRINT_STATS_INFO TOTAL_LAYER=[total_layer_count]
    {% set EXTRUDER_STANDBY_TEMPERATURE = 170|float %}
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}
    # Use absolute coordinates
    G90
    # Home the printer
    G28
    # Calibrate bed mesh
    G29
    M83 ; extruder relative mode
    M106 S50 ; Fan on approx. 20% to protect cooling ducts
    # Start bed heating
    M140 S{BED_TEMP}
    M104 S{EXTRUDER_STANDBY_TEMPERATURE} ; set standby extruder temp
    # Wait for bed to reach temperature
    M190 S{BED_TEMP}
    # Move the nozzle near the bed
    G1 Z5 F3000
    # Move the nozzle very close to the bed
    G1 Z0.15 F300
    # Set and wait for nozzle to reach temperature
    M104 S{EXTRUDER_TEMPERATURE} ; set first layer extruder temp
    M109 S{EXTRUDER_TEMP}
    G1 Z2 F240
    G1 X2 Y10 F3000
    G1 Z0.28 F240
    G92 E0.0
    G1 Y210 E16.0 F1500.0 ; intro line
    G1 X2.3 F5000
    G1 Y10 E20 F1200.0 ; intro line
    G92 E0.0
    LED_PRINTING

[gcode_macro END_PRINT]
gcode:
    LED_SUCCESS
    # Turn off bed, extruder, and fan
    {% set max_y = printer.toolhead.axis_maximum.y|float %}
    # Move nozzle away from print while retracting
    M83 ; Relative E
    G91 ; Relative XYZ
    G1 X-2 Y-2 Z+5 E-3 F300
    G90 ; Absolute XYZ
    M82 ; Absolute E
    M104 S0 ; turn off temperature
    M140 S0 ; turn off heatbed
    M106 S50 ; Leave fan running to protect cooling ducts.
    # Raise nozzle by 10mm
    G1 Z10 F3000
    M107 ; turn off fan
    # Present print
    G1 X0 Y210 F3000 ; present print
    # Disable steppers
    M84

# Cancel object (aka Marlin/RRF M486 commands) support
#
# Enable object exclusion
[exclude_object]

[gcode_macro M486]
gcode:
  # Parameters known to M486 are as follows:
  #   [C<flag>] Cancel the current object
  #   [P<index>] Cancel the object with the given index
  #   [S<index>] Set the index of the current object.
  #       If the object with the given index has been canceled, this will cause
  #       the firmware to skip to the next object. The value -1 is used to
  #       indicate something that isn’t an object and shouldn’t be skipped.
  #   [T<count>] Reset the state and set the number of objects
  #   [U<index>] Un-cancel the object with the given index. This command will be
  #       ignored if the object has already been skipped

  {% if 'exclude_object' not in printer %}
    {action_raise_error("[exclude_object] is not enabled")}
  {% endif %}

  {% if 'T' in params %}
    EXCLUDE_OBJECT RESET=1

    {% for i in range(params.T | int) %}
      EXCLUDE_OBJECT_DEFINE NAME={i}
    {% endfor %}
  {% endif %}

  {% if 'C' in params %}
    EXCLUDE_OBJECT CURRENT=1
  {% endif %}

  {% if 'P' in params %}
    EXCLUDE_OBJECT NAME={params.P}
  {% endif %}

  {% if 'S' in params %}
    {% if params.S == '-1' %}
      {% if printer.exclude_object.current_object %}
        EXCLUDE_OBJECT_END NAME={printer.exclude_object.current_object}
      {% endif %}
    {% else %}
      EXCLUDE_OBJECT_START NAME={params.S}
    {% endif %}
  {% endif %}

  {% if 'U' in params %}
    EXCLUDE_OBJECT RESET=1 NAME={params.U}
  {% endif %}
